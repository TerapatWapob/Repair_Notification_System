@using System.Text.Json
@{
    ViewData["Title"] = "Report";
    Layout = "_StaffLayout"; 

    // Convert ViewBag data to strongly-typed lists
    var typeOfProblemData = ViewBag.TypeOfProblemData as List<dynamic> ?? new List<dynamic>();
    var ticketStateData = ViewBag.TicketStateData as List<dynamic> ?? new List<dynamic>();
    var agencyData = ViewBag.AgencyData as List<dynamic> ?? new List<dynamic>();

    // Convert to JSON (Safe for JavaScript)
    var typeOfProblemJson = JsonSerializer.Serialize(typeOfProblemData);
    var ticketStateJson = JsonSerializer.Serialize(ticketStateData);
    var agencyJson = JsonSerializer.Serialize(agencyData);
}
<!-- Flatpickr CSS -->
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/flatpickr/dist/flatpickr.min.css">

<!-- Flatpickr JS -->
<script src="https://cdn.jsdelivr.net/npm/flatpickr"></script>
<script src="https://npmcdn.com/flatpickr/dist/l10n/th.js"></script>
<br>
<br>
<div class="container">
    <h1 class="text-center">📊 Report</h1>
    <h4 class="text-center">(ผลการดำเนินงาน)</h4>

    <div class="container mt-4">
    <form method="get" asp-action="Report" asp-controller="Staff">
    <div class="row mb-3">
        <!-- Date Inputs -->
        <div class="col-md-5">
            <label for="startDate">จากวันที่</label>
            <input type="text" class="form-control datepicker" id="startDate" name="startDate" placeholder="dd/mm/yyyy" value="@TempData["sDate"]">
        </div>
        <div class="col-md-5">
            <label for="endDate">ถึงวันที่</label>
            <input type="text" class="form-control datepicker" id="endDate" name="endDate" placeholder="dd/mm/yyyy" value="@TempData["eDate"]">
        </div>
        <div class="col-md-2">
            <button type="submit" class="btn btn-success mt-4">ค้นหา</button>
        </div>
    </div>
    </form>
    @* <div class="row mt-3">
        <!-- Textboxes -->
        <div class="col-md-6">
            <label for="textbox1">Textbox 1</label>
            <input type="text" class="form-control" id="textbox1" name="textbox1">
        </div>
        <div class="col-md-6">
            <label for="textbox2">Textbox 2</label>
            <input type="text" class="form-control" id="textbox2" name="textbox2">
        </div>
    </div> *@
</div>
@* @TempData["dd"] *@



    <div class="row">
        <!-- TypeOfProblem Pie Chart -->
        <div class="col-md-6">
            <canvas id="typeOfProblemChart"></canvas>
        </div>

        <!-- TicketState Pie Chart -->
        <div class="col-md-6">
            <canvas id="ticketStateChart"></canvas>
        </div>
    </div>

    <div class="row mt-4">
        <!-- Top 10 Agencies Bar Chart -->
        <div class="col-md-12">
            <canvas id="agencyChart"></canvas>
        </div>
    </div>
</div>

<!-- Chart.js Script -->
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
    document.addEventListener("DOMContentLoaded", function () {
        // Parse JSON properly (handles Thai text)
        var typeOfProblemData = JSON.parse('@Html.Raw(JsonSerializer.Serialize(ViewBag.TypeOfProblemData ?? new List<dynamic>()))');
        var ticketStateData = JSON.parse('@Html.Raw(JsonSerializer.Serialize(ViewBag.TicketStateData ?? new List<dynamic>()))');
        var agencyData = JSON.parse('@Html.Raw(JsonSerializer.Serialize(ViewBag.AgencyData ?? new List<dynamic>()))');

        console.log("✅ Parsed TypeOfProblemData:", typeOfProblemData);
        console.log("✅ Parsed TicketStateData:", ticketStateData);
        console.log("✅ Parsed AgencyData:", agencyData);

        // Ensure categories always exist (Set to 0 if missing)
        const typeCategories = [
            { name: "ปัญหาเกี่ยวกับซอฟต์แวร์", color: "#36A2EB" },  // Blue
            { name: "ปัญหาเกี่ยวกับฮาร์ดแวร์/อุปกรณ์", color: "#FF6384" }, // Red
            { name: "ปัญหาด้านเครือข่าย", color: "#FFCE56" }, // Yellow
            { name: "อื่นๆ", color: "#9E9E9E" } // Gray
        ];
        const ticketStates = [
            { name: "รับเรื่องร้องเรียน", color: "#1D87EA" },  // Light Blue
            { name: "อยู่ระหว่างดำเนินการ", color: "#FFCE56" },  // Yellow
            { name: "ดำเนินการเสร็จสิ้น", color: "#28CC34" } // Green
        ];

        // Convert data to dictionary for lookup
        const typeDict = Object.fromEntries(typeOfProblemData.map(x => [x.Type.toLowerCase(), x.Count]));
        const ticketStateDict = Object.fromEntries(ticketStateData.map(x => [x.State.toLowerCase(), x.Count]));

        // Construct datasets (ensures all labels exist)
        let typeLabels = typeCategories.map(t => t.name);
        let typeData = typeCategories.map(t => typeDict[t.name.toLowerCase()] || 0);
        let typeColors = typeCategories.map(t => t.color);

        let ticketLabels = ticketStates.map(t => t.name);
        let ticketData = ticketStates.map(t => ticketStateDict[t.name.toLowerCase()] || 0);
        let ticketColors = ticketStates.map(t => t.color);

        // TypeOfProblem Pie Chart (Counterclockwise)
        new Chart(document.getElementById("typeOfProblemChart"), {
            type: "pie",
            data: {
                labels: typeLabels,
                datasets: [{
                    data: typeData,
                    backgroundColor: typeColors
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false, // Ensure full-circle display
                rotation: -90, // Start from top and move counterclockwise
                plugins: {
                    legend: {
                        position: 'left', // Keep labels left to right
                        labels: {
                            usePointStyle: true
                        }
                    }
                }
            }
        });

        // TicketState Pie Chart (Counterclockwise)
        new Chart(document.getElementById("ticketStateChart"), {
            type: "pie",
            data: {
                labels: ticketLabels,
                datasets: [{
                    data: ticketData,
                    backgroundColor: ticketColors
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                rotation: -90, // Start from top and move counterclockwise
                plugins: {
                    legend: {
                        position: 'left',
                        labels: {
                            usePointStyle: true
                        }
                    }
                }
            }
        });

        // Top 10 Agencies Bar Chart
        new Chart(document.getElementById("agencyChart"), {
            type: "bar",
            data: {
                labels: agencyData.map(x => x.Agency),
                datasets: [{
                    label: "หน่วยงานที่แจ้งเรื่องเข้ามา (10 อันดับ)",
                    data: agencyData.map(x => x.Count),
                    backgroundColor: "#36A2EB"
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                scales: {
                    y: { beginAtZero: true }
                }
            }
        });
    });
</script>

<!-- Fix Chart Display -->
<style>
    canvas {
        width: 100% !important;
        height: 300px !important;
    }
</style>
<script>
    document.addEventListener("DOMContentLoaded", function () {
        // Initialize Flatpickr
        flatpickr(".datepicker", {
            dateFormat: "d/m/Y", // Set the date format to dd/mm/yyyy
            allowInput: true, // Allow manual input
            clickOpens: false, // Disable calendar popup
            "locale": "th" // Optional: Set locale to Thai (if needed)
        });
    });
</script>